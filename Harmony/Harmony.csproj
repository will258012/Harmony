<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net35</TargetFrameworks>
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
		<Product>CitiesHarmony.Harmony</Product>
		<Company>boformer</Company>
		<Copyright>Copyright Â© 2021</Copyright>
		<Description>
			This package should not be referenced directly, instead install the CitiesHarmony.API package!
			Cities: Skylines-compatible fork of the non-destructive patch library for .NET and Mono modules
		</Description>
		<PackageId>CitiesHarmony.Harmony</PackageId>
		<Authors>Andreas Pardeike,boformer</Authors>
		<AssemblyName>CitiesHarmony.Harmony</AssemblyName>
		<SignAssembly>true</SignAssembly>
		<Version>2.0.4.0</Version>
		<PackageVersion>$(HarmonyVersion)</PackageVersion>
		<PackageLicenseFile>LICENSE</PackageLicenseFile>
		<PackageProjectUrl>https://github.com/boformer/CitiesHarmony</PackageProjectUrl>
		<PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
		<PackageTags>Harmony,Mono,Patch,Patching,Runtime,Detour,Detours,Aspect,Aspects</PackageTags>
		<AssemblyVersion>2.0.4.0</AssemblyVersion>
		<FileVersion>$(HarmonyVersion)</FileVersion>
		<PackageIcon>HarmonyLogo.png</PackageIcon>
		<PackageIconUrl>https://raw.githubusercontent.com/boformer/Harmony/master/HarmonyLogo.png</PackageIconUrl>
		<GenerateDocumentationFile>true</GenerateDocumentationFile>
		<LogFile>obj/docfx-$(TargetFramework).log</LogFile>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<LangVersion>preview</LangVersion>
		<DefaultItemExcludes>$(DefaultItemExcludes);Documentation/**</DefaultItemExcludes>
		<CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
		<DevelopmentDependency>True</DevelopmentDependency>
		<CheckEolTargetFramework>false</CheckEolTargetFramework>
		<Version>$(HarmonyVersion)</Version>
		<AssemblyVersion>$(HarmonyVersion)</AssemblyVersion>
		<FileVersion>$(HarmonyVersion)</FileVersion>
		<PackageVersion>$(HarmonyVersion)$(HarmonyPrerelease)</PackageVersion>
		<InformationalVersion>$(HarmonyVersion)$(HarmonyPrerelease)</InformationalVersion>
		<NoWarn>$(NoWarn);SYSLIB0011;NU5131</NoWarn>
		<Configurations>DebugThin;DebugFat;ReleaseThin;ReleaseFat;ReleaseRef</Configurations>
		<PublishRepositoryUrl>true</PublishRepositoryUrl>
		<EmbedUntrackedSources>true</EmbedUntrackedSources>
		<ILRepackTargetsFile>$(SolutionDir)ILRepack.targets</ILRepackTargetsFile>
		<AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
		<ClearOutputDirectory>True</ClearOutputDirectory>
	</PropertyGroup>

	<PropertyGroup Condition="'$(TargetFramework)'=='net5.0' Or '$(TargetFramework)'=='net6.0' Or '$(TargetFramework)'=='net7.0' Or '$(TargetFramework)'=='net8.0'">
		<IsNET5OrGreater>true</IsNET5OrGreater>
	</PropertyGroup>
	<PropertyGroup Condition="'$(IsNET5OrGreater)' != 'true'">
		<IsNET5OrGreater>false</IsNET5OrGreater>
	</PropertyGroup>

	<ItemGroup>
		<None Include="..\README.md" Pack="true" PackagePath="" />
		<None Include="..\LICENSE" Pack="true" PackagePath="" />
		<None Include="..\HarmonyLogo.png" Pack="true" Visible="false" PackagePath="" />
		<None Include="..\_._" Pack="true" Visible="false" PackagePath="lib/netstandard2.0" Condition="$(Configuration)!='ReleaseRef'" />
	</ItemGroup>

	<PropertyGroup Condition="$(Configuration.StartsWith('Debug'))">
		<Optimize>false</Optimize>
		<DebugType>full</DebugType>
		<DebugSymbols>true</DebugSymbols>
		<DefineConstants>DEBUG</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)'=='ReleaseThin'">
		<Optimize>true</Optimize>
		<DebugType>portable</DebugType>
		<DebugSymbols>true</DebugSymbols>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)'=='ReleaseFat'">
		<Optimize>true</Optimize>
		<DebugType>portable</DebugType>
		<DebugSymbols>true</DebugSymbols>
		<CopyDebugSymbolFilesFromPackages>true</CopyDebugSymbolFilesFromPackages>
	</PropertyGroup>

	<ItemGroup Condition="$(Configuration.EndsWith('Thin'))">
		<PackageReference Include="MonoMod.Core" Version="$(MonoModCoreVersion)" />
	</ItemGroup>

	<ItemGroup Condition="$(Configuration.EndsWith('Fat')) Or '$(Configuration)'=='ReleaseRef'">
		<PackageReference Include="MonoMod.Core" Version="$(MonoModCoreVersion)" PrivateAssets="all" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="ILRepack.Lib.MSBuild.Task" Version="2.0.26" PrivateAssets="all" />
		<!-- Reference assemblies are needed for non-Windows .NET Framework targeting builds. -->
		<PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.3" PrivateAssets="all" />
		<PackageReference Include="Microsoft.SourceLink.GitHub" Version="8.0.0" PrivateAssets="All" />
	</ItemGroup>

	<!-- netstandard2.0 reference assemblies -->
	<PropertyGroup Condition="$(Configuration)!='ReleaseRef' And $(TargetFramework)=='netstandard2.0'">
		<!-- Remove from /lib in NuGet -->
		<IncludeBuildOutput>false</IncludeBuildOutput>
	</PropertyGroup>
	<ItemGroup Condition="$(Configuration)!='ReleaseRef' And $(TargetFramework)=='netstandard2.0'">
		<PackageReference Include="System.Reflection.Emit" Version="4.7.0" PrivateAssets="all" IncludeAssets="compile" />
	</ItemGroup>
	<ItemGroup Condition="$(Configuration)!='ReleaseRef' And $(TargetFramework)=='netstandard2.0'">
		<PackageReference Include="Lib.Harmony.Ref" Version="$(HarmonyVersion)" GeneratePath="true" />
	</ItemGroup>
	<Target Name="CustomBeforeBuild" AfterTargets="ResolvePackageDependenciesForBuild" Condition="$(Configuration)!='ReleaseRef'">
		<ItemGroup>
			<ReferenceToBeRemoved Include="@(Reference)" Condition="'%(Reference.PathInPackage)' == 'ref/netstandard2.0/0Harmony.dll'" />
			<Reference Remove="@(ReferenceToBeRemoved)" />
		</ItemGroup>
	</Target>
	<!-- netstandard2.0 reference assemblies -->

	<ItemGroup Condition="'$(TargetFramework)'=='net5.0'">
		<PackageReference Include="System.Text.Json" Version="5.0.2" />
	</ItemGroup>
	<ItemGroup Condition="'$(TargetFramework)'=='net6.0'">
		<PackageReference Include="System.Text.Json" Version="6.0.9" />
	</ItemGroup>
	<ItemGroup Condition="'$(TargetFramework)'=='net7.0'">
		<PackageReference Include="System.Text.Json" Version="7.0.4" />
	</ItemGroup>
	<ItemGroup Condition="'$(TargetFramework)'=='net8.0'">
		<PackageReference Include="System.Text.Json" Version="8.0.1" />
	</ItemGroup>
	<ItemGroup Condition="!$(IsNET5OrGreater)">
		<Compile Remove="**\*.net5.cs" />
		<Compile Remove="**\*.net6.cs" />
		<Compile Remove="**\*.net7.cs" />
		<Compile Remove="**\*.net8.cs" />
	</ItemGroup>

	<Target Name="RemoveOldNuGetPackages" BeforeTargets="PreBuildEvent">
		<PropertyGroup>
			<WorkingDirectory>$(MSBuildThisFileDirectory)bin\$(Configuration)</WorkingDirectory>
		</PropertyGroup>
		<ItemGroup>
			<OldNugetPackages Include="$(WorkingDirectory)\$(PackageId).*.nupkg" Exclude="$(WorkingDirectory)\$(PackageId).$(Version).nupkg" />
		</ItemGroup>
		<Delete Files="@(OldNugetPackages)" />
	</Target>

	<Target Name="RemoveFaultyPdb" BeforeTargets="Build">
		<ItemGroup>
			<FilesToDelete Include="$(ProjectDir)\$(OutDir)\MonoMod.ILHelpers.pdb" />
		</ItemGroup>
		<Delete Files="@(FilesToDelete)" />
	</Target>

	<Target Name="CleanZip" AfterTargets="Clean">
		<ItemGroup>
			<OldZipFiles Include="$(MSBuildThisFileDirectory)bin\Harmony-Ref.*.zip" Condition="'$(Configuration)'=='ReleaseRef'" />
			<OldZipFiles Include="$(MSBuildThisFileDirectory)bin\Harmony-Thin.*.zip" Condition="'$(Configuration)'=='ReleaseThin'" />
			<OldZipFiles Include="$(MSBuildThisFileDirectory)bin\Harmony-Fat.*.zip" Condition="'$(Configuration)'=='ReleaseFat'" />
		</ItemGroup>
		<Delete Files="@(OldZipFiles)" />
	</Target>

	<Target Name="RemoveExtraDlls" AfterTargets="Pack">
		<ItemGroup>
			<ExtraDlls Include="$(MSBuildThisFileDirectory)bin\**\MonoMod.*.*" />
			<ExtraDlls Include="$(MSBuildThisFileDirectory)bin\**\Mono.*.*" />
			<ExtraDlls Include="$(MSBuildThisFileDirectory)bin\**\System.*.*" />
		</ItemGroup>
		<Delete Files="@(ExtraDlls)" />
	</Target>

	<Target Name="Zip" AfterTargets="RemoveExtraDlls" DependsOnTargets="CleanZip">
		<ZipDirectory SourceDirectory="$(MSBuildThisFileDirectory)bin\$(Configuration)" DestinationFile="$(MSBuildThisFileDirectory)bin\Harmony-Ref.$(Version).zip" Overwrite="true" Condition="'$(Configuration)'=='ReleaseRef'" />
		<ZipDirectory SourceDirectory="$(MSBuildThisFileDirectory)bin\$(Configuration)" DestinationFile="$(MSBuildThisFileDirectory)bin\Harmony-Thin.$(Version).zip" Overwrite="true" Condition="'$(Configuration)'=='ReleaseThin'" />
		<ZipDirectory SourceDirectory="$(MSBuildThisFileDirectory)bin\$(Configuration)" DestinationFile="$(MSBuildThisFileDirectory)bin\Harmony-Fat.$(Version).zip" Overwrite="true" Condition="'$(Configuration)'=='ReleaseFat'" />
	</Target>

	<!-- ReleaseRef -->
	<PropertyGroup Condition="$(Configuration)=='ReleaseRef'">
		<TargetFrameworks>netstandard2.0;</TargetFrameworks>
		<PackageId>Lib.Harmony.Ref</PackageId>
		<!-- Remove from /lib in NuGet -->
		<IncludeBuildOutput>false</IncludeBuildOutput>
		<!-- Create reference Assemblies instead of a full assembly -->
		<ProduceOnlyReferenceAssembly>true</ProduceOnlyReferenceAssembly>
		<!-- Add our target for packing -->
		<TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);AddRefAssemblyToPackage</TargetsForTfmSpecificContentInPackage>
	</PropertyGroup>
	<ItemGroup Condition="$(Configuration)=='ReleaseRef'">
		<!-- Adding System.Reflection.Emit.* because there are public types exposed from its's package -->
		<PackageReference Include="System.Reflection.Emit" Version="4.7.0" IncludeAssets="compile" />
	</ItemGroup>
	<Target Name="AddRefAssemblyToPackage" Condition="$(Configuration)=='ReleaseRef'">
		<ItemGroup>
			<!-- Adding the Reference Assembly and the xml documentation to /ref of NuGet -->
			<TfmSpecificPackageFile Include="$(OutDir)$(AssemblyName).dll">
				<PackagePath>ref/netstandard2.0</PackagePath>
			</TfmSpecificPackageFile>
			<TfmSpecificPackageFile Include="$(OutDir)$(AssemblyName).xml">
				<PackagePath>ref/netstandard2.0</PackagePath>
			</TfmSpecificPackageFile>
		</ItemGroup>
	</Target>
	<!-- ReleaseRef -->

</Project>
